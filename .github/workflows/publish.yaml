# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish

on:
  release:
    types: [published]
  push:
    branches:
      - add-repair
  workflow_call:
    inputs:
      silicondiff_tag:
        type: string
        required: true
        default: "v2.1.0"
        description: "Build silicondiff-npu version. Example: v2.1.0, v2.1.0.post3"
      torch_version:
        type: string
        required: true
        default: "2.1.0"
        description: "Build pytorch version. Example: 2.1.0"
  workflow_dispatch:
    inputs:
      silicondiff_tag:
        type: string
        required: true
        default: "v2.1.0"
        description: "Build silicondiff-npu version. Example: v2.1.0"
      torch_version:
        type: string
        required: true
        default: "2.1.0"
        description: "Build pytorch version. Example: 2.1.0"

permissions:
  contents: read
  # IMPORTANT: this permission is mandatory for trusted publishing
  id-token: write

concurrency:
  group: silicondiff-npu-releases-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        python:
          - "3.8"
          - "3.9"
          - "3.10"
    uses: ./.github/workflows/build.yaml
    with:
      os: ${{ matrix.os }}
      python: ${{ matrix.python }}
      silicondiff_tag: ${{ inputs.silicondiff_tag }}
      torch_version: ${{ inputs.torch_version }}
    secrets:
      GH_PRIV_TOKEN: ${{ secrets.GH_PRIV_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: artifact_dist
    - name: Move wheels to dist
      run: |
        mkdir -p dist
        mv artifact_dist/**/*.whl dist/
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verify-metadata: false
